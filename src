(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _environment = require('./utils/environment');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /* jshint esnext: true */


/**
 * Abstract Module
 */
var _class = function () {
    function _class(options) {
        _classCallCheck(this, _class);

        this.$document = _environment.$document;
        this.$window = _environment.$window;
        this.$html = _environment.$html;
        this.$body = _environment.$body;
    }

    _class.prototype.init = function init() {};

    _class.prototype.destroy = function destroy() {};

    return _class;
}();

exports.default = _class;

},{"./utils/environment":5}],2:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* jshint esnext: true */
// import {$document, $window, $html, $body} from '../utils/environment';
/**
 * Map Object
 * Events:
 * - ICON_LOADED
 * - 
 */

var EVENT_KEY = 'marker';
var Event = {
    ICON_LOADED: 'icon_loaded.' + EVENT_KEY,
    READY: 'ready.' + EVENT_KEY
};

var Marker = function (_Object) {
    _inherits(Marker, _Object);

    function Marker(options) {
        _classCallCheck(this, Marker);

        // Privates
        var _this = _possibleConstructorReturn(this, _Object.call(this, options));

        _this._icon;

        _this.setIcon(options.icon);
        _this.coordinates = options.coordinates;
        _this.buildGoogleObject();
        return _this;
    }

    Marker.prototype.buildGoogleObject = function buildGoogleObject() {
        var obj = this.setGoogleObject(obj);
    };

    Marker.prototype.setIcon = function setIcon(icon) {
        if (!(icon instanceof Image)) {
            var preload = new Image();
            preload.onload = function () {};

            preload.error = function () {};

            icon = new Image(icon);
            icon.onload;
        }

        this._icon = icon;
        return this;
    };

    Marker.prototype.icon = function icon() {
        return this._icon;
    };

    /**
     * On click callback.
     * @return {thisArg} Chainable.
     */


    Marker.prototype.click = function click() {
        return this;
    };

    /**
     * On mouse over callback.
     * @return {thisArg} Chainable.
     */


    Marker.prototype.mouseover = function mouseover() {
        return this;
    };

    /**
     * On mouse out callback.
     * @return {thisArg} Chainable.
     */


    Marker.prototype.mouseout = function mouseout() {
        return this;
    };

    /**
     * Show object on map.
     * @return {thisArg} Chainable.
     */


    Marker.prototype.show = function show() {
        this.googleObject().setMap(this.map);
        return this;
    };

    /**
     * Hide object from map.
     * @return {thisArg} Chainable.
     */


    Marker.prototype.hide = function hide() {
        this.googleObject().setMap(null);
        return this;
    };

    /**
     * Remove object forever.
     * @return {[type]} [description]
     */


    Marker.prototype.delete = function _delete() {
        this.destroy();
    };

    Marker.prototype.destroy = function destroy() {
        this.hide();
    };

    return Marker;
}(Object);

},{}],3:[function(require,module,exports){
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* jshint esnext: true */
// import {$document, $window, $html, $body} from '../utils/environment';
/**
 * Map Object class
 */
var Object = function () {
    function Object(options) {
        _classCallCheck(this, Object);

        // Associated google map
        this.element = options.element;
        this.map = options.map;
        this._googleObject;
    }

    Object.prototype.dispatchEvent = function dispatchEvent(event, detail) {
        var ev = new CustomEvent(event, detail);
        this.element.dispatchEvent(ev);
        return this;
    };

    Object.prototype.eventListener = function eventListener(event, callback) {
        this.element.addEventListener(event, function (e) {
            callback(e);
        });
    };

    /**
     * Abstract function
     * @return {GoogleObject} Google object whatever it is.
     */


    Object.prototype.buildGoogleObject = function buildGoogleObject() {};

    /**
     * Sets the google object
     * @param {[type]} obj [description]
     */


    Object.prototype.setGoogleObject = function setGoogleObject(obj) {
        this._googleObject = obj;
        return this;
    };

    /**
     * Returns the google object no matter what it is
     * @return {GoogleObject} Google object (abstract).
     */


    Object.prototype.googleObject = function googleObject() {
        return this._googleObject;
    };

    /**
     * Callback when the object is ready and on map.
     * @return {thisArg} Chainable.
     */


    Object.prototype.ready = function ready() {
        // Callback
        return this;
    };

    /**
     * On click callback.
     * @return {thisArg} Chainable.
     */


    Object.prototype.click = function click() {
        return this;
    };

    /**
     * On mouse over callback.
     * @return {thisArg} Chainable.
     */


    Object.prototype.mouseover = function mouseover() {
        return this;
    };

    /**
     * On mouse out callback.
     * @return {thisArg} Chainable.
     */


    Object.prototype.mouseout = function mouseout() {
        return this;
    };

    /**
     * Show object on map.
     * @return {thisArg} Chainable.
     */


    Object.prototype.show = function show() {
        this.googleObject().setMap(this.map);
        return this;
    };

    /**
     * Hide object from map.
     * @return {thisArg} Chainable.
     */


    Object.prototype.hide = function hide() {
        this.googleObject().setMap(null);
        return this;
    };

    /**
     * Remove object forever.
     * Aliase for `destroy()`
     * @return {[type]} [description]
     */


    Object.prototype.delete = function _delete() {
        this.destroy();
    };

    Object.prototype.destroy = function destroy() {
        this.hide();
    };

    return Object;
}();

},{}],4:[function(require,module,exports){
"use strict";

(function () {
  if (typeof window.CustomEvent === "function") return false;

  function CustomEvent(event, params) {
    params = params || { bubbles: false, cancelable: false, detail: undefined };
    var evt = document.createEvent('CustomEvent');
    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    return evt;
  }

  CustomEvent.prototype = window.Event.prototype;

  window.CustomEvent = CustomEvent;
})();

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var $document = $(document);
var $window = $(window);
var $html = $(document.documentElement);
var $body = $(document.body);

exports.$document = $document;
exports.$window = $window;
exports.$html = $html;
exports.$body = $body;

},{}]},{},[1,2,3,4,5])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
