var BB=BB||{};BB.data=function(a){if(this.__PROTECTED__=[],this.__HIDDEN_DATA__=!0,this.__HIDDEN_DATA__){var b=a||{};return{set_data:function(a){for(var c in a)b[c]=a[c]},get_data:function(a){return a?"undefined"!=typeof b[a]?b[a]:"":b},remove_data:function(a){a||(b={}),"undefined"!=typeof b[a]&&(b[a]=void 0,delete b[a])}}}return this.__DATA=a||{},this.set_data=function(a){if(!this.__DATA)return void(this.__DATA=a||{});if(a)for(var b in a)this.__DATA[b]=a[b]},this.get_data=function(a){return a?"undefined"!=typeof this.__DATA[a]?this.__DATA[a]:void 0:this.__DATA},this.remove_data=function(a){a||(this.__DATA={}),"undefined"!=typeof this.__DATA[a]&&(this.__DATA[a]=void 0,delete this.__DATA[a])},this};var BB=BB||{};BB.base=function(){this.__BB_DEBUG__=!1,this.__PROTECTED__=[],this._data=new BB.data},BB.base.prototype.set_data=function(a){return"object"!=typeof a?this:(this._data.set_data(a),this)},BB.base.prototype.remove_data=function(a){return this._data.remove_data(a),this},BB.base.prototype.get_data=function(a){var b=this.data();return"undefined"!=typeof b[a]?b[a]:{}},BB.base.prototype.data=function(a){return this._data.get_data(a)},BB.base.prototype.sanitize=function(){var a=this.data();return a=this._escape_data(a),this.set_data(a),this},BB.base.prototype._escape_data=function(a){if("undefined"==typeof a)return"";if("object"==typeof a&&a.length)for(var b=0,c=a.length;c>b;b++)a[b]=this._escape_data(a[b]);if("object"==typeof a)for(var d in a)a[d]=this._escape_data(a[d]);return"string"==typeof a?escape(a):a},BB.base.prototype._unescape_data=function(a){if("undefined"==typeof a)return"";if("array"==typeof a)for(var b=0,c=a.length;c>b;b++)a[b]=this._unescape_data(a[b]);if("object"==typeof a)for(var d in a)a[d]=this._unescape_data(a[d]);return"string"==typeof a?unescape(a):a},BB.base.prototype.ident=function(){var a=this.data();return"string"!=typeof a.ident?(this.error("Ident is not a String which is odd. "+a.ident),""):a.ident},BB.base.prototype.set_ident=function(a){return"string"!=typeof a&&(a=""+a,this.error("Ident must be a string. Automatically converted to : "+a)),this.set_data({ident:a}),this},BB.base.prototype.error=function(a){if(this.__BB_DEBUG__)throw Error(a);return this},BB.base.prototype.is_empty_object=function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0};var BB=BB||{};BB.gmap=BB.gmap||{},BB.gmap.controller=function(a,b){return this._MAP,this._CONTAINER=a,this._MARKERS={},this.__PLACES={markers:{},polygons:{},lines:{}},this.set_data(b),this},BB.gmap.controller.prototype=new BB.base,BB.gmap.controller.prototype.map=function(){return this._MAP?this._MAP:void this.error("No map associated to the current controller")},BB.gmap.controller.prototype.set_zoom=function(a){this.map().setZoom(a)},BB.gmap.controller.prototype.init=function(){var a=this.data(),b=this.data("map");return b.center=new google.maps.LatLng(parseFloat(b.center.x),parseFloat(b.center.y)),this._MAP=new google.maps.Map(this._CONTAINER,b),"undefined"==typeof a.places?(this.error("You haven't set any places yet"),this):(this.add_places(a.places),this)},BB.gmap.controller.prototype.set_styles=function(a){"object"!=typeof a&&this.error("Invalid type styles in BB.gmap.set_styles()"+a);var a=new google.maps.StyledMapType(a,{name:"Custom"});return this.map().mapTypes.set("custom",a),this.map().setMapTypeId("custom"),this},BB.gmap.controller.prototype.add_places=function(a){if(!a)return this.error("Invalid places specified :"+a),this;for(var b in a)this.add_place(b,a[b]);return this},BB.gmap.controller.prototype.set_place=function(a,b,c){return b&&c?"undefined"==typeof this.__PLACES[a]?(this.error("Invalid data type at BB.gmap.controlle.set_place( "+a+", "+b+", "+c+")"),this):("undefined"==typeof this.__PLACES[a][b]&&(this.__PLACES[a][b]={}),this.__PLACES[a][b]=c,this):(this.error("Missing parameters in BB.gmap.controller.set_place( "+a+", "+b+", "+c+")"),this)},BB.gmap.controller.prototype.add_place=function(a,b){if(!b)return this.error("Missing parameter BB.gmap.controller.prototype.add_place ( ident, data ) : ( "+a+", "+b+" )"),this;if("string"!=typeof b.type)return this.error('Missing parameter "type" in BB.gmap.controller.prototype.add_place'),this;b.ident=a;var c=b.type;switch(c){case"marker":this.set_place("markers",a,new BB.gmap.marker(b,this));break;case"line":this.set_place("lines",a,new BB.gmap.line(b,this));break;case"polygon":this.set_place("polygons",a,new BB.gmap.polygon(b,this))}return this},BB.gmap.controller.prototype.get_places=function(){return this.__PLACES},BB.gmap.controller.prototype.get_places_by_type=function(a){return this.__PLACES[a]},BB.gmap.controller.prototype.add_marker=function(a,b){return this.set_place("markers",a,new BB.gmap.marker(b,this)),this.get_places_by_type("markers")[a].set_ident("ident"),this},BB.gmap.controller.prototype.get_marker=function(a){var b=this.get_places_by_type("markers");return"undefined"==typeof b[a]?(this.error("Invalid marker ident at BB.gmap.controller.get_marker( ident ) : "+a),!1):b[a]},BB.gmap.controller.prototype.add_place_by_address=function(a,b,c){var d=this;this.geocode_address(b,function(b){c.coords=b,d.add_place(a,c)})},BB.gmap.controller.prototype.geocode_address=function(a,b){var c=Array();if("undefined"==typeof google)return error;var d=new google.maps.Geocoder;d.geocode({address:a},function(a,d){if(d==google.maps.GeocoderStatus.OK){var e=a[0].geometry.location.lat(),f=a[0].geometry.location.lng();"function"==typeof b&&b([e,f])}return c})},BB.gmap.controller.prototype.get_place=function(a){var b=this.get_places(),c=!1;for(var d in b){var e=this.get_places_by_type(d);this.is_empty_object(e)||(c="object"==typeof e[a]?e[a]:!1)}return c?c:(this.error("Invalid ident at BB.gmap.controller.get_place( ident ) : "+a),!1)},BB.gmap.controller.prototype.add_clusterer=function(){},BB.gmap.controller.prototype.get_clusterer=function(){},BB.gmap.controller.prototype.filter=function(){},BB.gmap.controller.prototype.clear_infoboxes=function(){},BB.gmap.controller.prototype.refresh=function(){this.clear_infoboxes()},BB.gmap.controller.prototype.translate_coords=function(a){if("object"==typeof a){var b=a.length;if(2==b)return new google.maps.LatLng(a[0],a[1])}};var BB=BB||{};BB.gmap=BB.gmap||{},BB.gmap.marker=function(a,b){this.__MARKER=void 0,this.__MEDIA,this.__CONTROLLER=b,this._image_loaded=!1,this._marker_loaded=!1,this.set_data(a);this.data();return this.init(),this},BB.gmap.marker.prototype=new BB.base,BB.gmap.marker.prototype.init=function(){var a=this.data();return"string"==typeof a.icon&&this.set_image(a.icon),this.__ICON,this},BB.gmap.marker.prototype.icon=function(){return this.__ICON?this.__ICON:(this.error("No icon were defined yet."),new Image)},BB.gmap.marker.prototype.set_icon=function(a){return"object"!=typeof a?(this.error("Invalid icon at BB.gmap.marker.prototype.set_icon( "+a+" )"),this):(this.__ICON=a,this)},BB.gmap.marker.prototype.set_image=function(a){var b=new Image;return b.data=this,b.onload=function(){this.data.set_icon(this),this.data.display()},b.src=a,this},BB.gmap.marker.prototype.display=function(){var a=this.icon().width,b=this.icon().height,c=this.data();if("object"!=typeof c.coords)return this.error("Requires coordinates [lat, lng] at BB.gmap.marker.display()"),!1;var d={map:this.controller().map(),icon:new google.maps.MarkerImage(this.icon().src,new google.maps.Size(a,b),new google.maps.Point(0,0),new google.maps.Point(a,b),new google.maps.Size(a,b)),position:new google.maps.LatLng(c.coords[0],c.coords[1]),optimized:!1};if("undefined"!=typeof this.marker())this.marker().setOptions(d);else{var e=new google.maps.Marker(d);this.set_marker(e)}return this},BB.gmap.marker.prototype.show=function(){this.marker();"undefined"==typeof marker&&this.error("No marker defined at BB.gmap.marker.show()"),marker.setMap(this.controller().map())},BB.gmap.marker.prototype.hide=function(){var a=this.marker();"undefined"==typeof marker&&this.error("No marker defined at BB.gmap.marker.hide()"),a.setMap(null)},BB.gmap.marker.prototype.controller=function(){return this.__CONTROLLER},BB.gmap.marker.prototype.set_marker=function(a){return this._marker_loaded?(this.error("There is already a marker affected to this instanciation of a [BB.gmap.marker] ( "+this.ident()+" )"),this):(this._marker_loaded=!0,this.__MARKER=a,this)},BB.gmap.marker.prototype.marker=function(){return this.__MARKER},BB.gmap.marker.prototype.refresh=function(){var a=this.data("_opts"),b=this.marker();b.setOptions(a)},BB.gmap.marker.prototype.set_map=function(a){return this.marker().setMap(a),this};var BB=BB||{};BB.gmap=BB.gmap||{},BB.gmap.line=function(a,b){this.__OBJECT=void 0,this.__STYLES,this.__PATHS,this.__CONTROLLER=b,this.set_data(a);this.data();return this.init(),this},BB.gmap.line.prototype=new BB.base,BB.gmap.line.prototype.init=function(){var a=this.data();return"object"==typeof a.styles&&this.add_styles(a.styles),"object"==typeof a.paths&&this.set_paths(a.paths),this.get_paths()&&this.get_styles()&&this.display(),this},BB.gmap.line.prototype.add_styles=function(a){this.__STYLES=a},BB.gmap.line.prototype.set_styles=function(a){return this.add_styles(a),this.display(),this},BB.gmap.line.prototype.get_styles=function(){return this.__STYLES},BB.gmap.line.prototype.set_paths=function(a){if("object"!=typeof a)return void this.error("Invalid paths at BB.gmap.line.set_paths :"+a);if(!(a[0]instanceof google.maps.LatLng)){for(var b=0,c=a.length,d=[];c>b&&"object"==typeof a[b];b++){var e=this.controller().translate_coords(a[b]);d.push(e)}a=d}this.__PATHS=a},BB.gmap.line.prototype.get_paths=function(){return this.__PATHS},BB.gmap.line.prototype.display=function(){var a=(this.data(),this.get_styles());"undefined"==typeof a&&this.error("Undefined styles at BB.gmap.line.display : "+a);var b=this.get_paths();if("undefined"==typeof b&&this.error("Undefined paths at BB.gmap.line.display : "+b),a.path=b,"undefined"!=typeof this.object())this.object().setOptions(a);else{var c=new google.maps.Polyline(a);this.set_object(c)}return this.set_map(this.controller().map()),this},BB.gmap.line.prototype.show=function(){this.object();"undefined"==typeof line&&this.error("No line defined at BB.gmap.line.show()"),line.setMap(this.controller().map())},BB.gmap.line.prototype.hide=function(){var a=this.object();"undefined"==typeof line&&this.error("No line defined at BB.gmap.line.hide()"),a.setMap(null)},BB.gmap.line.prototype.controller=function(){return this.__CONTROLLER},BB.gmap.line.prototype.set_object=function(a){return this.__OBJECT=a,this},BB.gmap.line.prototype.object=function(){return this.__OBJECT},BB.gmap.line.prototype.refresh=function(){var a=this.data("_opts"),b=this.object();b.setOptions(a)},BB.gmap.line.prototype.set_map=function(a){return this.object().setMap(a),this};var BB=BB||{};BB.gmap=BB.gmap||{},BB.gmap.polygon=function(a,b){this.__OBJECT=void 0,this.__STYLES,this.__PATHS,this.__CONTROLLER=b,this.set_data(a);this.data();return this.init(),this},BB.gmap.polygon.prototype=new BB.base,BB.gmap.polygon.prototype.init=function(){var a=this.data();return"object"==typeof a.styles&&this.add_styles(a.styles),"object"==typeof a.paths&&this.set_paths(a.paths),this.get_paths()&&this.get_styles()&&this.display(),this},BB.gmap.polygon.prototype.add_styles=function(a){this.__STYLES=a},BB.gmap.polygon.prototype.set_styles=function(a){return this.add_styles(a),this.display(),this},BB.gmap.polygon.prototype.get_styles=function(){return this.__STYLES},BB.gmap.polygon.prototype.set_paths=function(a){if("object"!=typeof a)return void this.error("Invalid paths at BB.gmap.polygon.set_paths :"+a);if(!(a[0]instanceof google.maps.LatLng)){for(var b=0,c=a.length,d=[];c>b&&"object"==typeof a[b];b++){var e=this.controller().translate_coords(a[b]);d.push(e)}a=d}this.__PATHS=a},BB.gmap.polygon.prototype.get_paths=function(){return this.__PATHS},BB.gmap.polygon.prototype.display=function(){var a=(this.data(),this.get_styles());"undefined"==typeof a&&this.error("Undefined styles at BB.gmap.polygon.display : "+a);var b=this.get_paths();if("undefined"==typeof b&&this.error("Undefined paths at BB.gmap.polygon.display : "+b),a.paths=b,"undefined"!=typeof this.object())this.object().setOptions(a);else{var c=new google.maps.Polygon(a);this.set_object(c)}return this.set_map(this.controller().map()),this},BB.gmap.polygon.prototype.show=function(){this.object();"undefined"==typeof polygon&&this.error("No polygon defined at BB.gmap.polygon.show()"),polygon.setMap(this.controller().map())},BB.gmap.polygon.prototype.hide=function(){var a=this.object();"undefined"==typeof polygon&&this.error("No polygon defined at BB.gmap.polygon.hide()"),a.setMap(null)},BB.gmap.polygon.prototype.controller=function(){return this.__CONTROLLER},BB.gmap.polygon.prototype.set_object=function(a){return this.__OBJECT=a,this},BB.gmap.polygon.prototype.object=function(){return this.__OBJECT},BB.gmap.polygon.prototype.refresh=function(){var a=this.data("_opts"),b=this.object();b.setOptions(a)},BB.gmap.polygon.prototype.set_map=function(a){return this.object().setMap(a),this};